from django.conf.urls import url
from structure.views import *
from structure import views
from django.conf import settings
from django.urls import path
from django.views.generic import TemplateView
from django.views.decorators.cache import cache_page

urlpatterns = [
    ### LEGACY LINKS ###
    url(r'^gprot_statistics$', StructureStatistics.as_view(), name='structure_statistics'),
    url(r'^arrestin_statistics$', StructureStatistics.as_view(), name='structure_statistics'),
    path('statistics', StructureStatistics.as_view(), name='structure_statistics'),
    url(r'^$', views.DomainBrowser, name='structure_browser'),
    url(r'^g_protein_structure_browser$', views.DomainBrowser, name='g_protein_structure_browser'),
    url(r'^arrestin_structure_browser$', views.DomainBrowser, name='arrestin_structure_browser'),
    url(r'^homology_models$', views.ModelsRedirect, name='homology_models'),
    url(r'^complex_models$', views.ModelsRedirect, name='complex_models'),
    url(r'^arrestin_models$',views.ModelsRedirect, name='complex_models'),
    ### LEGACY BUT STILL NEEDED  ###
    url(r'^homology_models/(?P<modelname>\w+)_(?P<state>\w+)$', cache_page(60*60*24*7)(HomologyModelDetails), name='homology_model_details'),
    url(r'^homology_models/(?P<modelname>\w+)_(?P<state>\w+)_(?P<fullness>\w+)/download_pdb$', SingleModelDownload, name='single_model_download'),
    url(r'^homology_models/view/(?P<modelname>\w+)_(?P<state>\w+)$', ServeHomModDiagram, name='hommod_serve_view'),
    url(r'^complex_models/(?P<header>\w+)$',cache_page(60*60*24*7)(ComplexModelDetails), name='complex_model_details'),
    url(r'^complex_models/view/(?P<modelname>\w+)$', ServeComplexModDiagram, name='complexmod_serve_view'),
    url(r'^complex_models/(?P<modelname>\w+)/download_complex_pdb$', SingleComplexModelDownload, name='single_complex_model_download'),
    ################################
    url(r'^structure_browser$', views.DomainBrowser, name='domain_browser'),
    url(r'^structure_coverage$', StructureStatistics.as_view(), name='structure_statistics'),
    url(r'^structure_models$', views.ModelsRedirect, name='models_redirect'),
    url(r'^browser$', RedirectBrowser, name='redirect_browser'),
    url(r'^selection_convert$', ConvertStructuresToProteins, name='convert'),
    url(r'^selection_convert_model$', ConvertStructureModelsToProteins, name='convert_mod'),
    url(r'^selection_convert_signprot_model$', ConvertStructureComplexSignprotToProteins, name='convert_signprot'),
    url(r'^hommod_download$', HommodDownload, name='hommod_download'),
    url(r'^complexmod_download$', ComplexmodDownload, name='complexmod_download'),
    url(r'^template_browser', TemplateBrowser.as_view(), name='structure_browser'),
    url(r'^template_selection', TemplateTargetSelection.as_view(), name='structure_browser'),
    url(r'^template_segment_selection', TemplateSegmentSelection.as_view(), name='structure_browser'),
    url(r'^model_statistics$', cache_page(60*60*24)(ServeModelStatistics.as_view()), name='model_statistics'),
    url(r'^pdb_segment_selection', PDBSegmentSelection.as_view(), name='pdb_download'),
    url(r'^pdb_download$', PDBClean.as_view(), name='pdb_download'),
    url(r'^pdb_download_custom$', PDBClean.as_view(), name='pdb_download_custom'),
    url(r'^pdb_download/(?P<substructure>\w+)$', PDBDownload.as_view(), name='pdb_download'),
    url(r'^generic_numbering_index', GenericNumberingIndex.as_view(), name='generic_numbering'),
    url(r'^generic_numbering_results$', GenericNumberingResults.as_view(), name='generic_numbering'),
    url(r'^generic_numbering_results/(?P<substructure>\w+)$', GenericNumberingDownload.as_view(), name='generic_numbering'),
    url(r'^generic_numbering_selection', GenericNumberingSelection.as_view(), name='generic_numbering'),
    url(r'^superposition_workflow_index$', SuperpositionWorkflowIndex.as_view(), name='superposition_workflow'),
    url(r'^superposition_workflow_gprot_index$', SuperpositionWorkflowIndex.as_view(website='gprot'), name='superposition_workflow_gprot'),
    url(r'^superposition_workflow_arrestin_index$', SuperpositionWorkflowIndex.as_view(website='arrestin'), name='superposition_workflow_gprot'),
    url(r'^segmentselectiongprot$', SegmentSelectionGprotein.as_view(), name='superposition_workflow_gprot'),
    url(r'^superposition_workflow_index/(?P<clear>\w{4})$', SuperpositionWorkflowIndex.as_view(), name='superposition_workflow'),
    url(r'^superposition_workflow_gprot_index/(?P<clear>\w{4})$', SuperpositionWorkflowIndex.as_view(website='gprot'), name='superposition_workflow_gprot'),
    url(r'^superposition_workflow_arrestin_index/(?P<clear>\w{4})$', SuperpositionWorkflowIndex.as_view(website='arrestin'), name='superposition_workflow_gprot'),
    url(r'^superposition_workflow_selection', SuperpositionWorkflowSelection.as_view(), name='superposition_workflow'),
    url(r'^superposition_workflow_results$', SuperpositionWorkflowResults.as_view(), name='superposition_workflow'),
    url(r'^superposition_workflow_results_gprot$', SuperpositionWorkflowResults.as_view(website='gprot'), name='superposition_workflow'),
    url(r'^superposition_workflow_results_arrestin$', SuperpositionWorkflowResults.as_view(website='arrestin'), name='superposition_workflow'),
    url(r'^superposition_workflow_results/(?P<substructure>\w+)$', SuperpositionWorkflowDownload.as_view(), name='superposition_workflow'),
    url(r'^superposition_workflow_results_gprot/(?P<substructure>\w+)$', SuperpositionWorkflowDownload.as_view(website='gprot'), name='superposition_workflow'),
    url(r'^output/(?P<outfile>\w+.\w{3})/(?P<replacement_tag>\w+)$', ServePdbOutfile, name='structural_tools_result'),
    url(r'^zipoutput/(?P<outfile>\w+.\w{3})/', ServeZipOutfile, name='structural_tools_result'),
    url(r'^showtrees', RenderTrees, name='render'),
    url(r'^(?P<pdbname>\w+)$', cache_page(60*60*24*7)(StructureDetails), name='structure_details'),
    url(r'^pdb/(?P<pdbname>\w+)$', cache_page(60*60*24*7)(ServePdbDiagram), name='structure_serve_pdb'),
    url(r'^pdb_upright/(?P<pdbname>\w+)$', ServeUprightPdbDiagram, name='structure_serve_upright_pdb'),
    url(r'^pdb_clean/(?P<pdbname>\w+)_(?P<ligname>\w+)$', ServeCleanPdbDiagram, name='structure_clean_pdb'),
    url(r'^refined/(?P<modelname>\w+)_(?P<fullness>\w+)/download_pdb$', SingleModelDownload, name='single_model_download'),
    url(r'^(?P<pdbcode>\w+)/download_pdb$', SingleStructureDownload, name='single_structure_download'),
    url(r'^refined/(?P<pdbname>\w+)$', cache_page(60*60*24*7)(RefinedModelDetails), name="refined_model_details"),
    url(r'^refined/(?P<modelname>\w+)/download_complex_pdb$', SingleComplexModelDownload, name='single_complex_model_download'),
    url(r'^pdb/(?P<pdbname>\w+)/ligand/(?P<ligand>.+)$', ServePdbLigandDiagram, name='structure_serve_pdb_ligand'),
    ##### COMMENTED PATHS #####
    # url(r'^complex_models/(?P<header>\w+)$',ComplexModelDetails, name='complex_model_details'),
    # url(r'^complex_models/view/(?P<modelname>\w+)-(?P<signprot>\w+)$', ServeComplexModDiagram, name='complexmod_serve_view'),
    # url(r'^complex_models/(?P<modelname>\w+)-(?P<signprot>\w+)$', cache_page(60*60*24*7)(ComplexModelDetails), name='complex_model_details'),
    # url(r'^complex_models/(?P<modelname>\w+)-(?P<signprot>\w+)/download_csv$', SingleComplexModelDownload, {'csv':True}, name='single_complex_model_download'),
    # url(r'^homology_models/(?P<modelname>\w+)_(?P<state>\w+)/download_csv$', SingleModelDownload, {'csv':True}, name='single_model_download'),
    # url(r'^homology_models/(?P<modelname>\w+)_(?P<state>\w+)$', HomologyModelDetails, name='homology_model_details'),
    #    url(r'^webform$', views.webform, name='webform'),
    #    url(r'^webformdata$', views.webformdata, name='webformdata'),
    #    url(r'^construct$', views.webform_two, name='webform_two'),
    #    url(r'^construct/(?P<slug>[\w_]+)$', views.webform_two, name='webform_two'),
    #    url(r'^webform/(?P<slug>[\w_]+)$', views.webform_download, name='webform_download'),
    #    url(r'^fragment_superposition_index', FragmentSuperpositionIndex.as_view(), name='fragment_superposition'),
    #    url(r'^fragment_superposition_results', FragmentSuperpositionResults.as_view(), name='fragment_superposition'),
    # url(r'^pdb_download_index$', PDBClean.as_view(), name='pdb_download'),
    ###########################
]
